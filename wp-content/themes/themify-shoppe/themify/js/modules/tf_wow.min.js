(n=>{'use strict';let e=!1;const s=function(){if(!1===e){e=!0;const t=this.style,a=t.animationName,i=this.dataset.tfAnimation_hover;a&&(t.animationIterationCount=t.animationDelay=t.animationName='',this.classList.remove(a)),this.tfOn('animationend',function(t){this.classList.remove('animated','tb_hover_animate',t.animationName),this.style.animationName=this.style.willChange='',e=!1},{passive:!0,once:!0}),t.animationName=i,this.classList.add('animated','tb_hover_animate',i)}},i=new IntersectionObserver((a,i)=>{for(let t=a.length-1;-1<t;--t)!0===a[t].isIntersecting&&(i.unobserve(a[t].target),e=a[t].target,n.imagesLoad(e).then(t=>{if(t.style.visibility='visible',t.hasAttribute('data-tf-animation')){t.hasAttribute('data-tf-animation_repeat')&&(t.style.animationIterationCount=t.dataset.tfAnimation_repeat),t.hasAttribute('data-tf-animation_delay')&&(t.style.animationDelay=t.dataset.tfAnimation_delay+'s');const a=t.dataset.tfAnimation;t.classList.add(a),t.style.animationName=a,t.tfOn('animationend',function(){this.style.animationIterationCount=this.style.animationDelay=this.style.willChange='',this.classList.remove('animated',a),this.removeAttribute('data-tf-animation')},{passive:!0,once:!0}).classList.add('animated')}if(t.classList.contains('hover-wow')){const i=n.isTouch?'touchstart':'mouseenter',e=[i,'tf_custom_animate'];t.tfOff(e,s,{passive:!0}).tfOn(e,s,{passive:!0})}}));var e});n.on('tf_wow_init',a=>{n.animateCss().then(()=>{for(let t=a.length-1;-1<t;--t)a[t].style.willChange='transform,opacity',i.observe(a[t])})})})(Themify);