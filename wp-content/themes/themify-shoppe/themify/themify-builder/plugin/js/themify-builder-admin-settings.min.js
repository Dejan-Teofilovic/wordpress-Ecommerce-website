((s,c,i,d)=>{'use strict';const t=async()=>{s.loadJs(s.url+'js/admin/notification',!!c.TF_Notification),await s.loadJs(s.url+'js/admin/panel',!!c.ThemifyPanel);const t=i.tfId('tb_panel'),a=t.firstElementChild,o=i.createDocumentFragment(),e=i.tfId('tf_svg').cloneNode(!0),n=(o.appendChild(e),a&&(t.attachShadow({mode:a.getAttribute('shadowroot')}).appendChild(a.content),a.remove()),t.shadowRoot.prepend(o),new ThemifyPanel(t.shadowRoot.querySelector('.container'),d.nonce,d.data,d.options,d.labels));n.el.querySelector('#main').tfOn('submit',async t=>{t.preventDefault(),t.stopPropagation();const a=Array.from(new FormData(t.currentTarget)),o={};await s.loadJs(s.url+'js/admin/notification',!!c.TF_Notification);for(let t=a.length-1;-1<t;--t)''!==a[t][1]&&'default'!==a[t][1]&&(o[a[t][0]]=a[t][1]);const e={action:'themify_builder_settings_save',nonce:d.nonce,data:JSON.stringify(o)};try{await TF_Notification.show('info','Saving');const n=await s.fetch(e);if(!n.success)throw n}catch(t){try{e.data=new Blob([e.data],{type:'application/json'});const i=await s.fetch(e);if(!i.success)throw i}catch(t){throw t}}await TF_Notification.showHide('done')})};!0===c.loaded?t():c.tfOn('load',t,{once:!0,passive:!0})})(Themify,window,document,tb_settings);