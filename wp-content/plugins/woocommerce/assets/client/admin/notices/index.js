!function(){"use strict";var t={d:function(e,n){for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e);var n={};t.r(n),t.d(n,{createErrorNotice:function(){return g},createInfoNotice:function(){return f},createNotice:function(){return d},createSuccessNotice:function(){return a},createWarningNotice:function(){return p},removeNotice:function(){return v}});var i={};t.r(i),t.d(i,{getNotices:function(){return y}}),window.wp.notices;var o,r=window.wp.data,c=window.lodash,u=(o="context",t=>function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;const i=n[o];if(void 0===i)return e;const r=t(e[i],n);return r===e[i]?e:{...e,[i]:r}})((function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"CREATE_NOTICE":return[...(0,c.reject)(t,{id:e.notice.id}),e.notice];case"REMOVE_NOTICE":return(0,c.reject)(t,{id:e.id})}return t}));const s="global",l="info";function d(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{speak:i=!0,isDismissible:o=!0,context:r=s,id:u=(0,c.uniqueId)(r),actions:d=[],type:a="default",__unstableHTML:f,icon:g=null,explicitDismiss:p=!1,onDismiss:v=null}=n;return e=String(e),{type:"CREATE_NOTICE",context:r,notice:{id:u,status:t,content:e,spokenMessage:i?e:null,__unstableHTML:f,isDismissible:o,actions:d,type:a,icon:g,explicitDismiss:p,onDismiss:v}}}function a(t,e){return d("success",t,e)}function f(t,e){return d("info",t,e)}function g(t,e){return d("error",t,e)}function p(t,e){return d("warning",t,e)}function v(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return{type:"REMOVE_NOTICE",id:t,context:e}}const w=[];function y(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return t[e]||w}(0,r.registerStore)("core/notices2",{reducer:u,actions:n,selectors:i}),(window.wc=window.wc||{}).notices=e}();